// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.648
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
)

func squares(items [][]rune) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"><title>HTML 5 Boilerplate</title></head><body><style type=\"text/css\">\n      \n      body{\n        color: white;\n        background-color: black;\n      }\n    </style><div class=\"game-board-js\"><div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for i, arr := range items {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for j := range arr {
				var templ_7745c5c3_Var2 = []any{fmt.Sprintf("row%d-col%d", i, j)}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `startSnake.templ`, Line: 1, Col: 0}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">.</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><button id=\"game-start\">Start Game</button><div class=\"game-state\"></div><script type=\"text/javascript\">\n\n      console.log(\"First line\")\n      const startGame = document.getElementsByClassName(\"game-start\")[0];\n\n      console.log(\"We loaded\")\n\n      document.getElementById('game-start').addEventListener('click', event => {\n\n        if (window['WebSocket']) {\n          const conn = new WebSocket('ws://' + document.location.host + '/ws');\n\n          let clientBoard = [];\n          let foodLocation = [12, 12];\n          let snakeState = [[12, 12]];\n\n          document.getElementsByClassName(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = \"X\";\n\n          for (i = 0; i < 25; i++) {\n            clientBoard[i] = \".\" * 25\n          }\n          console.log(clientBoard[0])\n\n          conn.onopen = function () {\n            // Send initial data on WebSocket open\n            conn.send(\"Initial message\");\n            console.log(\"Hi again\")\n          }\n\n          document.addEventListener(\"keydown\", function(event) {\n            conn.send(JSON.stringify(event.key));\n            });\n\n\n          conn.onclose = ()  => {\n            console.log(\"Websocket connection has been closed\")\n            // Document events or actions on WebSocket close\n          };\n\n          conn.onmessage = evt => {\n            let data = JSON.parse(evt.data)\n            console.log(\"Server data: \" + data)\n            \n            \n            if (data == null || data == NaN) {\n              console.log(\"Decode error\")\n              return\n            }\n\n            if (data === \"You Died\") {\n              console.log(\"\\rYou Died\");\n              conn.close();\n              return;\n            }\n\n            if (data.length > 2) {\n              clientBoard[foodLocation[0]][foodLocation[1]] = 'X'\n              document.getElementsByClassName(`row${foodLocation[0]}-col${foodLocation[1]}`).innerText = \"X\";\n              clientBoard[data[0][0]][data[0][1]] = 'O'\n              document.getElementsByClassName(`row${data[0][0]}-col${data[0][1]}`).innerText = \"O\";\n              foodLocation = data[0]\n\n              let l = snakeState.length - 1\n              clientBoard[snakeState[l][0]][snakeState[l][1]] = '.'\n              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = \".\";\n\n              snakeState.unshift(data[1])\n              //\t\t\t\tfmt.Printf(\"Second Check length = %d\\n\", l+1)\n              snakeState.push(data.slice(2, data.length))\n              //\t\t\t\tconsole.log(\"Third Check length = \" + (l+1))\n              clientBoard[snakeState[0][0]][snakeState[0][1]] = 'X'\n              document.getElementsByClassName(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = \"X\";\n\n              for (i = 2; i < data.length; i++) {\n                clientBoard[data[i][0]][data[i][1]] = 'X'\n                document.getElementsByClassName(`row${data[i][0]}-col${data[i][1]}`).innerText = \"X\";\n              }\n\n            } else {\n              let l = snakeState.length - 1\n              clientBoard[snakeState[l][0]][snakeState[l][1]] = \".\";\n              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = \".\";\n              snakeState.unshift(data[0]);\n\n              clientBoard[snakeState[0][0]][snakeState[0][1]] = \"X\"\n              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = \"X\";\n\n            }\n          };\n\n        }\n      });\n\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
