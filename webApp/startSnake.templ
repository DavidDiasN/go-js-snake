package main

import (
  "fmt"
)

templ squares(items [][]rune) {
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <meta http-equiv="X-UA-Compatible" content="ie=edge"/>
      <title>HTML 5 Boilerplate</title>

    </head>
    <body>
    <style type="text/css">
      
      body{
        color: white;
        background-color: black;
      }
      
      .fixed-inline-div {
        display: inline-block;
        width: 20px;
        height: 20px;
      }
    </style>
      <div class="game-board-js">
        <div>
        for i, arr := range items {
          <div>
            for j := range arr {
              
              <div class="fixed-inline-div" id={ fmt.Sprintf("row%d-col%d", i, j)}>.</div>

            }
          </div>
        }
        </div>
      </div>
      <button id="game-start">Start Game</button>
      <div class="game-state">
      </div>


    <script type="text/javascript">

      function removeFirst(arr) {
          return arr.map((subArray, index) => index > 0 ? subArray : null).filter(Boolean);
      }

      function removeLast(arr) {
          let l = arr.length - 1
          return arr.filter((_, index) => index != l);
      }

      // Function to prepend an element to an array
      function prepend(arr, element) {
          return [[...element], ...arr];
      }

      // Function to append an element to an array
      function append(arr, element) {
          const newArr = [...arr];
          
          if (Array.isArray(element) && element.length > 2) {
              element.forEach(item => newArr.push(item));
          } else {
              newArr.push(element);
          }
          
          return newArr;
      }
      function sliceArray(arr, start, end) {
        return arr.filter((_, index) => index >= start && index <= end)
      }

      const startGame = document.getElementsByClassName("game-start")[0];

      document.getElementById('game-start').addEventListener('click', event => {

      if (window['WebSocket']) {
        const conn = new WebSocket('ws://' + document.location.host + '/ws');


        let foodLocation = [12, 12];
        let snakeState = [];
        snakeState.push([12,12])

        document.getElementById(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = "X";

        conn.onopen = function () {
          // Send initial data on WebSocket open
          conn.send("Initial message");
        }

        document.addEventListener("keydown", function(event) {
          conn.send(JSON.stringify(event.key));
          });


        conn.onclose = ()  => {
          console.log("Websocket connection has been closed")
          // Document events or actions on WebSocket close
        };

        conn.onmessage = evt => {
          let data = JSON.parse(evt.data);
          
          
          if (data == null || data == NaN) {
            console.log("Decode error")
            return
          }

          if (data === "You Died") {
            console.log("\rYou Died");
            conn.close();
            return;
          }

          if (data.length > 2) {
            
            document.getElementById(`row${foodLocation[0]}-col${foodLocation[1]}`).innerText = "X";
            document.getElementById(`row${data[0][0]}-col${data[0][1]}`).innerText = "O";
            foodLocation = data[0]

            let l = snakeState.length - 1
            document.getElementById(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = ".";

            snakeState = removeLast(snakeState);

            snakeState = prepend(snakeState, data[1]);

            snakeState = append(snakeState, sliceArray(data, 2, data.length))

            
            document.getElementById(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = "X";

            for (i = 2; i < data.length; i++) {
              document.getElementById(`row${data[i][0]}-col${data[i][1]}`).innerText = "X";
            }

          } else  {


            let l = snakeState.length - 1;

            document.getElementById(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = ".";
            snakeState = sliceArray(snakeState, 0, l-1)

            snakeState = prepend(snakeState, data[0])

            document.getElementById("row" + snakeState[0][0] + "-col" + snakeState[0][1]).innerText = "X";

          }
        };

      }
    });

    </script>
    </body>
  </html>

}

