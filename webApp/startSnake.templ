package main

import (
  "fmt"
)

templ squares(items [][]rune) {
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <meta http-equiv="X-UA-Compatible" content="ie=edge"/>
      <title>HTML 5 Boilerplate</title>

    </head>
    <body>
    <style type="text/css">
      
      body{
        color: white;
        background-color: black;
      }
    </style>
      <div class="game-board-js">
        <div>
        for i, arr := range items {
          <div>
            for j := range arr {
              
              <button class={ fmt.Sprintf("row%d-col%d", i, j)}>.</button>

            }
          </div>
        }
        </div>
      </div>
      <button id="game-start">Start Game</button>
      <div class="game-state">
      </div>


    <script type="text/javascript">

      console.log("First line")
      const startGame = document.getElementsByClassName("game-start")[0];

      console.log("We loaded")

      document.getElementById('game-start').addEventListener('click', event => {

        if (window['WebSocket']) {
          const conn = new WebSocket('ws://' + document.location.host + '/ws');

          let clientBoard = [];
          let foodLocation = [12, 12];
          let snakeState = [[12, 12]];

          document.getElementsByClassName(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = "X";

          for (i = 0; i < 25; i++) {
            clientBoard[i] = "." * 25
          }
          console.log(clientBoard[0])

          conn.onopen = function () {
            // Send initial data on WebSocket open
            conn.send("Initial message");
            console.log("Hi again")
          }

          document.addEventListener("keydown", function(event) {
            conn.send(JSON.stringify(event.key));
            });


          conn.onclose = ()  => {
            console.log("Websocket connection has been closed")
            // Document events or actions on WebSocket close
          };

          conn.onmessage = evt => {
            let data = JSON.parse(evt.data)
            console.log("Server data: " + data)
            
            
            if (data == null || data == NaN) {
              console.log("Decode error")
              return
            }

            if (data === "You Died") {
              console.log("\rYou Died");
              conn.close();
              return;
            }

            if (data.length > 2) {
              clientBoard[foodLocation[0]][foodLocation[1]] = 'X'
              document.getElementsByClassName(`row${foodLocation[0]}-col${foodLocation[1]}`).innerText = "X";
              clientBoard[data[0][0]][data[0][1]] = 'O'
              document.getElementsByClassName(`row${data[0][0]}-col${data[0][1]}`).innerText = "O";
              foodLocation = data[0]

              let l = snakeState.length - 1
              clientBoard[snakeState[l][0]][snakeState[l][1]] = '.'
              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = ".";

              snakeState = snakeState.unshift(data[1])
              //				fmt.Printf("Second Check length = %d\n", l+1)
              snakeState = snakeState.push(data.slice(2, data.length))
              //				console.log("Third Check length = " + (l+1))
              clientBoard[snakeState[0][0]][snakeState[0][1]] = 'X'
              document.getElementsByClassName(`row${snakeState[0][0]}-col${snakeState[0][1]}`).innerText = "X";

              for (i = 2; i < data.length; i++) {
                clientBoard[data[i][0]][data[i][1]] = 'X'
                document.getElementsByClassName(`row${data[i][0]}-col${data[i][1]}`).innerText = "X";
              }

            } else 
              let l = snakeState.length - 1
              clientBoard[snakeState[l][0]][snakeState[l][1]] = ".";
              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = ".";
              snakeState = snakeState.unshift(data[0]);

              clientBoard[snakeState[0][0]][snakeState[0][1]] = "X"
              document.getElementsByClassName(`row${snakeState[l][0]}-col${snakeState[l][1]}`).innerText = "X";

            }
          };

        }
      });

    </script>
    </body>
  </html>

}

